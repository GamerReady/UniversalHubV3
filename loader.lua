local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local LDExp=math.ldexp;local GetFEnv=getfenv or function() return _ENV;end ;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...) local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),"..",function(byte) if (Byte(byte,2)==81) then local FlatIdent_8751C=0;while true do if (FlatIdent_8751C==0) then repeatNext=StrToNumber(Sub(byte,1,1));return "";end end else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);local function gBit(Bit,Start,End) if End then local FlatIdent_7126A=0;local Res;while true do if (FlatIdent_7126A==0) then Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1)) ;return Res-(Res%1) ;end end else local FlatIdent_51FCC=0;local Plc;while true do if (FlatIdent_51FCC==0) then Plc=2^(Start-1) ;return (((Bit%(Plc + Plc))>=Plc) and 1) or 0 ;end end end end local function gBits8() local FlatIdent_12703=0;local a;while true do if (FlatIdent_12703==0) then a=Byte(ByteString,DIP,DIP);DIP=DIP + 1 ;FlatIdent_12703=1;end if (FlatIdent_12703==1) then return a;end end end local function gBits16() local a,b=Byte(ByteString,DIP,DIP + 2 );DIP=DIP + 2 ;return (b * 256) + a ;end local function gBits32() local a,b,c,d=Byte(ByteString,DIP,DIP + 3 );DIP=DIP + 4 ;return (d * 16777216) + (c * 65536) + (b * 256) + a ;end local function gFloat() local FlatIdent_475BC=0;local Left;local Right;local IsNormal;local Mantissa;local Exponent;local Sign;while true do if (FlatIdent_475BC==3) then if (Exponent==0) then if (Mantissa==0) then return Sign * 0 ;else local FlatIdent_90DF8=0;while true do if (FlatIdent_90DF8==0) then Exponent=1;IsNormal=0;break;end end end elseif (Exponent==2047) then return ((Mantissa==0) and (Sign * (1/0))) or (Sign * NaN) ;end return LDExp(Sign,Exponent-1023 ) * (IsNormal + (Mantissa/(2^52))) ;end if (FlatIdent_475BC==1) then IsNormal=1;Mantissa=(gBit(Right,1,20) * (2^32)) + Left ;FlatIdent_475BC=2;end if (FlatIdent_475BC==2) then Exponent=gBit(Right,21,31);Sign=((gBit(Right,32)==1) and  -1) or 1 ;FlatIdent_475BC=3;end if (FlatIdent_475BC==0) then Left=gBits32();Right=gBits3
